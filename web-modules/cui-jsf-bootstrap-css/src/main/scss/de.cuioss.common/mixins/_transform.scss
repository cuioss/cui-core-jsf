
// scale use size as arglist supports 1 or 2 parameter
@mixin scale($size...){
  -ms-transform: scale($size); // IE 9
  -webkit-transform: scale($size); // Safari
  transform: scale($size);
}



//
//Hint mixins allow usage of argumet list.
//see: http://www.sitepoint.com/sass-multiple-arguments-lists-or-arglist/
//
//Hint css animation
//@see : https://developer.mozilla.org/de/docs/Web/Guide/CSS/CSS_Animationen_nutzen
//@see : http://www.w3schools.com/css/css3_animations.asp
//

//
//mixin provide shorthand animation declaration. attribute parameter is a arglist.
//
//common shorthand animation arguments :
//animation: name duration timing-function delay iteration-count direction fill-mode play-state;
//
@mixin animation($attributes...){
  animation: $attributes;
  -webkit-animation: $attributes;
  -moz-animation: $attributes;
  -o-animation: $attributes;
  -ms-animation: $attributes;
}

//
//keyframes mixin provide include of any content inside browser specific keyframes.
//$name : define keyframe name.
//
//Example :
//
//// Usage
//@include keyframes(fade){
//  // keyframe content
//  0% {
//    opacity: 0;
//  }
//  100% {
//    opacity: 1;
//  }
//}
//
//// Result
//@-webkit-keyframes fade {
//  0% {
//    opacity: 0;
//  }
//  100% {
//    opacity: 1;
//  }
//}
//...
//
//
//Rule specifies the animation code.
//Hint : saas does show warning on usage "from" and "to" as content, the same can be defined by use "0%" and "100%"
//
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-webkit-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}
